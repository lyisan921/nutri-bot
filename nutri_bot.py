from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "5284761727:AAG5nQPZNpWLN4Gc3fCpYGtGBT83wYLNK0U"

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –Ω—É—Ç—Ä–∏-–±–æ—Ç ü•¶")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {update.message.text}")

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
def start_scheduler():
    scheduler = AsyncIOScheduler()
    # scheduler.add_job(—Ç–≤–æ—è_—Ñ—É–Ω–∫—Ü–∏—è, 'interval', seconds=60)
    scheduler.start()

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
def main():
    application = Application.builder().token(TOKEN).build()

    # –•–µ–Ω–¥–ª–µ—Ä—ã
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    start_scheduler()

    # –ó–∞–ø—É—Å–∫
    application.run_polling()

if __name__ == "__main__":
    main()
